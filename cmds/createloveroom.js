const Discord = require('discord.js');
const fs = require('fs');
const derabbit = require('../package.json');
const config = require('../botconfig.json');
//mongoose
const mongoose = require('mongoose');
const profileModel = require('../schemas/profileSchema.js');
const loveroomModel = require('../schemas/loveroomSchema.js');
//—Ü–µ–Ω—ã
loveroomCost = 15000;

module.exports.run = async (bot,message,args) => {
	try{
		
		let rUser = message.author;
		let uid = message.author.id;
		let rMember = message.member;

		if (message.channel.id == config.mainChannel || message.channel.id == config.toxicChannel || message.channel.id == config.selfiesChannel) {
            bot.channels.cache.get(config.floodChannel).send(`–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç, ${rUser}! –¢—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –æ–±—â–∏–µ —á–∞—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è! –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —á–∞—Ç <#${config.floodChannel}>!`);
            message.delete();
            return;
        }

		profileData = await profileModel.findOne({ userID: uid });
        let userCoins = profileData.silverCoins;
        let userMarriage = profileData.marriage;

        let noMarried = new Discord.MessageEmbed()
        .setColor(`${config.defaultColor}`)
        .setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –õ—é–±–æ–≤–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã‚óû")
        .setDescription(`–°–Ω–∞—á–∞–ª–∞ –∑–∞–∫–ª—é—á–∏—Ç–µ –±—Ä–∞–∫.`)
        .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
        .setTimestamp();

        let errorCoins = new Discord.MessageEmbed()
		.setColor(`${config.errColor}`)
		.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –û—à–∏–±–∫–∞‚óû")
		.setDescription(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–µ—Ä–µ–±—Ä–∞. –°—Ç–æ–∏–º–æ—Å—Ç—å –ª—é–±–æ–≤–Ω–æ–π –∫–æ–º–Ω–∞—Ç—ã: ${loveroomCost} ${config.silverCoin}\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userCoins} ${config.silverCoin}`)
		.setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
		.setTimestamp();

		let alreadyHaveLR = new Discord.MessageEmbed()
        .setColor(`${config.defaultColor}`)
        .setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –õ—é–±–æ–≤–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã‚óû")
        .setDescription(`–£ –í–∞—Å —É–∂–µ –µ—Å—Ç—å –ª—é–±–æ–≤–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞!`)
        .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
        .setTimestamp();

        let created = new Discord.MessageEmbed()
        .setColor(`${config.defaultColor}`)
        .setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –õ—é–±–æ–≤–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã‚óû")
        .setDescription(`–ö–æ–º–Ω–∞—Ç–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞! –•–æ—Ä–æ—à–µ–≥–æ –í–∞–º –≤—Ä–µ–º—è–ø—Ä–µ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è.\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: ${userCoins - loveroomCost} ${config.silverCoin}`)
        .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
        .setTimestamp();

        let loveroomId = 0;
		clrData = await loveroomModel.findOne({ userID: uid });
		if (!clrData) {
			clr = await loveroomModel.create({
				userID: uid,
				loveroomID: 0,
				loveroomTimestamp: 0,
				loveroomLastpayment: 0,
			});
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
			clr.save();
		} else {
			loveroomId = clrData.loveroomID;
		}

		if (!(loveroomId == 0)) return message.channel.send(alreadyHaveLR);
		if (userMarriage == "" || userMarriage == " " || userMarriage == null || userMarriage == "–ù–µ—Ç") return message.channel.send(noMarried);
		if (userCoins < loveroomCost) return message.channel.send(errorCoins);

		let mUser = bot.guilds.cache.get(config.serverId).members.cache.get(userMarriage);

		let channelName = rUser.username + " üíû " + mUser.user.username;

		rMember.guild.channels.create(channelName, {
			type: 'voice',
			userLimit: 2,
			parent: config.loveroomsCategory,
			permissionOverwrites: [{
				id: rMember.id,
				allow: ['VIEW_CHANNEL', 'CONNECT', 'SPEAK']
			},{
				id: mUser.id,
				allow: ['VIEW_CHANNEL', 'CONNECT', 'SPEAK']
			},{
				id: config.everyoneID,
				deny: ['CONNECT', 'SPEAK'],
			},{
				id: config.nonverifiedUserRole,
				deny: ['CONNECT']
			}]
		}).then( async c => {
			try {
				//–ø—Ä–∏—Å–≤–æ–∏—Ç—å –∞–π–¥–∏ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∫ –ø—Ä–æ—Ñ–∞–π–ª—É
				newLoveroomID = bot.channels.cache.find(channel => channel.name === channelName).id;

				clrResponce = await loveroomModel.updateOne({
					userID: uid,
				}, {
					loveroomID: newLoveroomID,
					loveroomTimestamp: Date.now(),
					loveroomLastpayment: Date.now(),
				});

				clrData = await loveroomModel.findOne({ userID: mUser.id });

				if (!clrData) {
					clr = await loveroomModel.create({
						userID: mUser.id,
						loveroomID: newLoveroomID,
						loveroomTimestamp: Date.now(),
						loveroomLastpayment: Date.now(),
					});
					//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
					clr.save();
				} else {
					clrResponce = await loveroomModel.updateOne({
						userID: mUser.id,
					}, {
						loveroomID: newLoveroomID,
						loveroomTimestamp: Date.now(),
						loveroomLastpayment: Date.now(),
					});
				}

				profileData = await profileModel.updateOne({
		            userID: uid,
		        }, {
		        	$inc: {
		        		silverCoins: -loveroomCost
		        	}
		        });

				message.channel.send(created);
			} catch (err) {
				console.warn(err);
			}
		});

	} catch(err) {
		if(err.name === "ReferenceError")
		console.log("–£ –≤–∞—Å –æ—à–∏–±–∫–∞")
		console.log(`1.${err.name}\n2.${err.message}\n3.${err.stack}`);
	}
};

module.exports.help = {
	name: "createloveroom",
	alias: "clr"
};