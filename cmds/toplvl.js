const Discord = require('discord.js');
const fs = require('fs');
const derabbit = require('../package.json');
const config = require('../botconfig.json');
//mongoose
const mongoose = require('mongoose');
const profileModel = require('../schemas/profileSchema.js');

module.exports.run = async (bot,message,args) => {
    try{
        
        let rUser = message.author;

        if (message.channel.id == config.mainChannel || message.channel.id == config.toxicChannel || message.channel.id == config.selfiesChannel) {
            bot.channels.cache.get(config.floodChannel).send(`–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç, ${rUser}! –¢—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –æ–±—â–∏–µ —á–∞—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è! –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —á–∞—Ç <#${config.floodChannel}>!`);
            message.delete();
            return;
        }

        const results = await profileModel.find({}).sort({lvl: -1}).limit(10);

        var lbString = "";
        var lbPos = 1;
        var lbEmoji = ""

        for (let i = 0; i < results.length; i++) {
            const { userID, lvl = 0 } = results[i];

            switch (lbPos) {
            case 1:
                lbEmoji = "ü•á"
                break;
            case 2:
                lbEmoji = "ü•à"
                break;
            case 3:
                lbEmoji = "ü•â"
                break;
            default:
                lbEmoji = ""
                break;
            }
            if (lbPos <= 3) {
                lbString += lbEmoji + ` <@${userID}>\n–£—Ä–æ–≤–µ–Ω—å: ` + lvl + `\n\n`;
            } else {
                lbString += lbPos + ". " + ` <@${userID}>\n–£—Ä–æ–≤–µ–Ω—å: ` + lvl + `\n\n`;
            }
            lbPos++;
        }

        var lbEmbed = new Discord.MessageEmbed()
        .setColor(config.defaultColor)
        .setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –¢–æ–ø –ø–æ —É—Ä–æ–≤–Ω—é‚óû")
        .setDescription("```–¢–æ–ø 5 —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º —É—Ä–æ–≤–Ω–µ–º:```\n" + lbString)
        .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
        .setTimestamp();
        message.channel.send(lbEmbed);

    } catch(err) {
        if(err.name === "ReferenceError")
        console.log("–£ –≤–∞—Å –æ—à–∏–±–∫–∞")
        console.log(`1.${err.name}\n2.${err.message}\n3.${err.stack}`);
    }
};

module.exports.help = {
    name: "toplvl",
    alias: "toplevel"
};