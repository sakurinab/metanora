const Discord = require('discord.js');
const fs = require('fs');
const derabbit = require('../package.json');
const config = require('../botconfig.json');
const pagination = require('discord.js-pagination');
//mongoose
const mongoose = require('mongoose');
const invModel = require('../schemas/inventorySchema.js');

//–º–∞–≥–∞–∑–∏–Ω —ç–º–æ–¥–∂–∏
const emojiShop = [
	{"index": 1, "packEmoji": `${config.silverCoin} ${config.goldCoin} üí¨ ‚ò†Ô∏è üîñ üïπÔ∏è üé≠ üíû ‚öîÔ∏è üéôÔ∏è üèÖ`, "packName": "Dead rabbit", "price": "1000", "type": "silver"},
	{"index": 2, "packEmoji": `ü§ç üíõ üíå üí¢ üéÄ üéà üí• üíï üåπ üé§ üßø`, "packName": "Lovely", "price": "2000", "type": "silver"},
	{"index": 3, "packEmoji": `‚ö™ üü° üîª ‚¨õ ‚óª ‚¨ú üî∫ üî∂ üî∑ üî≤ üî≥`, "packName": "Aesthetic", "price": "4000", "type": "silver"},
	{"index": 4, "packEmoji": `üíÄ ‚ò†Ô∏è ‚õìÔ∏è ‚ùï üéì ‚ö∞Ô∏è üßü‚Äç‚ôÇÔ∏è üñ§ üóëÔ∏è üîù üëë `, "packName": "Lunapack", "price": "6000", "type": "silver"},
	{"index": 5, "packEmoji": `üçº üçØ üçé üßÇ ü•ö üç≥ üç™ üç≠ üç∞ üçï ü•ì`, "packName": "Foodie", "price": "8000", "type": "silver"},
	{"index": 6, "packEmoji": `üéÜ üéá ‚ú® üß® üéâ üéä üé´ üíç üé© üß∏ üõí`, "packName": "Party", "price": "16000", "type": "silver"},
	{"index": 7, "packEmoji": `ü•à ü•á üé∞ üí£ üïπ üéÆ üîÆ üìç üèπ üé∂ üìª`, "packName": "Games", "price": "32000", "type": "silver"},
	{"index": 8, "packEmoji": `üåë üåï üé¥ üõë ‚òÑ ‚ö° üå∏ üèÆ üí† üê≤ ‚õ©`, "packName": "Japan", "price": "200", "type": "gold"},
	{"index": 9, "packEmoji": `üåë üåï ‚òÄÔ∏è ‚≠ê üåü üå† üåÄ ‚òÑÔ∏è üí´ ‚ö° ‚ú®`, "packName": "Infinity", "price": "400", "type": "gold"}
];

module.exports.run = async (bot,message,args) => {
	try{
		
		let rUser = message.author;
		let uid = message.author.id;

		if (message.channel.id == config.mainChannel || message.channel.id == config.toxicChannel || message.channel.id == config.selfiesChannel) {
            bot.channels.cache.get(config.floodChannel).send(`–ï—â—ë —Ä–∞–∑ –ø—Ä–∏–≤–µ—Ç, ${rUser}! –¢—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤ –æ–±—â–∏–µ —á–∞—Ç—ã –¥–ª—è –æ–±—â–µ–Ω–∏—è! –î–ª—è —ç—Ç–æ–≥–æ –µ—Å—Ç—å —á–∞—Ç <#${config.floodChannel}>!`);
            message.delete();
            return;
        }

		invData = await invModel.findOne({ userID: uid });
        if (!invData) {
			inv = await invModel.create({
				userID: uid,
			});
			//—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
			inv.save();
		}
		userEmoji = invData.invEmoji;

		var storeEmbedPage1 = new Discord.MessageEmbed()
		.setColor("#147cb8")
		.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ú–∞–≥–∞–∑–∏–Ω —ç–º–æ–¥–∂–∏‚óû")
		.setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
		.setTimestamp();

		for (let i = 0; i < 8; i++) {
			storeEmbedPage1.addField(`–ò–Ω–¥–µ–∫—Å`, "`" + `${emojiShop[i].index}` + "`", inline = true);
			storeEmbedPage1.addField(`–ü–∞–∫: ${emojiShop[i].packName}`, `${emojiShop[i].packEmoji}`, inline = true);
			if (userEmoji.find(x => x.index === emojiShop[i].index)) {
				storeEmbedPage1.addField(`–¶–µ–Ω–∞`, `–ö—É–ø–ª–µ–Ω–æ!`, inline = true);
			} else {
				if (emojiShop[i].type == "gold") {
					storeEmbedPage1.addField(`–¶–µ–Ω–∞`, `${emojiShop[i].price} ${config.goldCoin}`, inline = true);
				} else {
					storeEmbedPage1.addField(`–¶–µ–Ω–∞`, `${emojiShop[i].price} ${config.silverCoin}`, inline = true);
				}
			}
		}

		var storeEmbedPage2 = new Discord.MessageEmbed()
		.setColor("#147cb8")
		.setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ú–∞–≥–∞–∑–∏–Ω —ç–º–æ–¥–∂–∏‚óû")
		.setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
		.setTimestamp();

		for (let i = 8; i < 9; i++) {
			storeEmbedPage2.addField(`–ò–Ω–¥–µ–∫—Å`, "`" + `${emojiShop[i].index}` + "`", inline = true);
			storeEmbedPage2.addField(`–ü–∞–∫: ${emojiShop[i].packName}`, `${emojiShop[i].packEmoji}`, inline = true);
			if (userEmoji.find(x => x.index === emojiShop[i].index)) {
				storeEmbedPage2.addField(`–¶–µ–Ω–∞`, `–ö—É–ø–ª–µ–Ω–æ!`, inline = true);
			} else {
				if (emojiShop[i].type == "gold") {
					storeEmbedPage2.addField(`–¶–µ–Ω–∞`, `${emojiShop[i].price} ${config.goldCoin}`, inline = true);
				} else {
					storeEmbedPage2.addField(`–¶–µ–Ω–∞`, `${emojiShop[i].price} ${config.silverCoin}`, inline = true);
				}
			}
		}


		const pages = [
			storeEmbedPage1,
			storeEmbedPage2
		];
		const emoji = ["‚è™", "‚è©"];
		const timeout = '45000';
		pagination(message, pages, emoji, timeout);

	} catch(err) {
		if(err.name === "ReferenceError")
		console.log("–£ –≤–∞—Å –æ—à–∏–±–∫–∞")
		console.log(`1.${err.name}\n2.${err.message}\n3.${err.stack}`);
	}
};

module.exports.help = {
	name: "emojishop",
	alias: "es"
};